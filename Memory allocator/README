Pentru a stoca lista cu block-uri, am folosit o variabila globala care pointeaza
catre inceputul listei. De asemenea, am stocat intr-o variabila un threshold
care este modificat daca e malloc, respectiv calloc.

1. malloc
    1.1. size-ul care trebuie alocat depaseste threshold-ul -> folosesc mmap
    1.2. e primul nod din lista -> folosesc sbrk si aloc MAX_THRESHOLD spatiu,
        dupa fac split
    1.3. nu e primul nod din lista -> intai unesc nodurile libere(coalesce),
        dupa, folosind strategia best fit, incerc sa gasesc un nod care are
        spatiu mai mare decat size-ul care trebuie alocat, cat mai mic posibil.
        1.3.1. Daca gasesc un astfel de block -> ii fac split, daca e cazul
        1.3.2. Daca nu gasesc un astfel de block
            1.3.2.1. Daca ultimul block e liber -> il extind cu sbrk
            1.3.2.2. Daca ultimul block e ocupat -> aloc cu sbrk si leg ultimul
                block din lista de noul block
2. free
    2.1. Daca block-ul e alocat cu mmap -> folosesc munmap
    2.2. Daca block-ul nu e alocat cu mmap -> il marchez ca fiind liber

3. calloc
    3.1. Modific threshold-ul(la calloc se foloseste PAGE_SIZE)
    3.2. Aloc cu malloc
    3.3. Initializare cu 0
        3.3.1. Daca am folosit mmap -> deja e initializat cu 0 fiindca se
            foloseste o pagina noua
        3.3.2. Daca nu am folosit mmap -> initializez cu 0

4. realloc
    4.1. Daca block-ul e liber -> returnez NULL
    4.2. Daca block-ul e mapped -> folosesc malloc si memcpy, nimic special
    4.3. Daca block-ul e ocupat
        4.3.1. Daca size-ul nou e mai mic decat size-ul anterior -> fac split
        4.3.2. Daca block-ul meu e ultimul din lista -> il extind
        4.3.3. Daca block-ul urmator e liber si noul size e mai mare decat
            size-ul anterior -> unesc block-urile, iar la final fac split
